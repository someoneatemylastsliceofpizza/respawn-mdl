//------------------------------------------------
//--- 010 Editor v12.0.1 Binary Template
//
//      File: 
//   Authors: 
//   Version: 
//   Purpose: 
//  Category: 
// File Mask: 
//  ID Bytes: 
//   History: 
//------------------------------------------------


// do included models
FSeek(hdr.includemodelindex);
mstudiomodelgroup_t includemodels[hdr.numincludemodels] <bgcolor=cLtBlue, read=ReadString(startof(this) + this.sznameindex)>;

// seek to textures
FSeek(hdr.textureindex);

// do textures and version checks
switch(hdr.version)
{
    case 53:
        mstudiotexture_t_v53 textures[hdr.numtextures] <bgcolor=cGreen, read=ReadString(startof(this) + this.sznameindex)>;
        break;
    case 52:
        mstudiotexture_t_v52 textures[hdr.numtextures] <bgcolor=cGreen, read=ReadString(startof(this) + this.sznameindex)>;
        break;
    default:
        mstudiotexture_t textures[hdr.numtextures] <bgcolor=cGreen, read=ReadString(startof(this) + this.sznameindex)>;
        break;
}

// do cdmaterials
FSeek(hdr.cdtextureindex);
mstudiotexturedir_t cdmaterials[hdr.numcdtextures] <bgcolor=cDkGreen, read=ReadString(this.sznameindex)>;

// do skingroups
FSeek(hdr.skinindex);
if(hdr.numskinfamilies)
{
    struct {
        short texture[hdr.numskinref] <read=ReadString(startof(textures[this]) + textures[this].sznameindex)>;
    } skingroup[hdr.numskinfamilies] <optimize=false, bgcolor=cDkGreen>;
}
//------------------------------------------------
//--- 010 Editor v12.0.1 Binary Template
//
//      File: mdl
//   Authors: Rika
//   Version: 48/49/52/53
//   Purpose: Respawn MDL Files
//  Category: Model
// File Mask: *.mdl
//  ID Bytes: 
//   History: 
//------------------------------------------------


/*SEQUENCE MODULE*/


if(hdr.numlocalseq)
{
    struct {
        for(i = 0; i < hdr.numlocalseq; i++)
        {
            FSeek(hdr.localseqindex + ((hdr.version == 53 ? sizeof(mstudioseqdesc_t_v53) : sizeof(mstudioseqdesc_t_v49)) * i));
            struct {
                switch(hdr.version)
                {
                    case 63:
                        mstudioseqdesc_t_v52 seqdesc <bgcolor=0xf0b27a, read=Str("%s : %s", ReadString(startof(this) + this.szlabelindex), ReadString(startof(this) + this.szactivitynameindex))>;
                        break;
                    case 53:
                        mstudioseqdesc_t_v53 seqdesc <bgcolor=0xf0b27a, read=Str("%s : %s", ReadString(startof(this) + this.szlabelindex), ReadString(startof(this) + this.szactivitynameindex))>;
                        break;
                    case 52:
                        mstudioseqdesc_t_v52 seqdesc <bgcolor=0xf0b27a, read=Str("%s : %s", ReadString(startof(this) + this.szlabelindex), ReadString(startof(this) + this.szactivitynameindex))>;
                        break;
                    case 49:
                        mstudioseqdesc_t_v49 seqdesc <bgcolor=0xf0b27a, read=Str("%s : %s", ReadString(startof(this) + this.szlabelindex), ReadString(startof(this) + this.szactivitynameindex))>;
                        break;
                    default:
                        mstudioseqdesc_t_v48 seqdesc <bgcolor=0xf0b27a, read=Str("%s : %s", ReadString(startof(this) + this.szlabelindex), ReadString(startof(this) + this.szactivitynameindex))>;
                        break;
                    
                }
                local int seqidx = i;

                FSeek(startof(seqdesc) + seqdesc.posekeyindex);
                if(seqdesc.posekeyindex)
                    float posekey[seqdesc.groupsize[0] + seqdesc.groupsize[1]] <bgcolor=0x55ee00>;
                
                FSeek(startof(seqdesc) + seqdesc.eventindex);
                mstudioevent_t seqevent[seqdesc.numevents] <bgcolor=0x21fe7a, read=ReadString(startof(this) + this.szeventindex)>;
                
                FSeek(startof(seqdesc) + seqdesc.autolayerindex);
                mstudioautolayer_t autolayers[seqdesc.numautolayers] <bgcolor=0x226600>;
            
                FSeek(startof(seqdesc) + seqdesc.weightlistindex);
                float weightlist[hdr.numbones] <bgcolor=0xe1f27a>;
            
                FSeek(startof(seqdesc) + seqdesc.iklockindex);
                mstudioiklock_t iklock[seqdesc.numiklocks] <bgcolor=0x88CC22>;

                FSeek(startof(seqdesc) + seqdesc.animindexindex);
                short blendgroup[seqdesc.groupsize[0] * seqdesc.groupsize[1]] <read=ReadString(gl_animdesc_sznameindex[this]), bgcolor=0xffff00>;

                if(hdr.version > 48)
                {
                    FSeek(startof(seqdesc) + seqdesc.activitymodifierindex);
                    if(hdr.version >= 52)
                    {
                        for(j = 0; j < seqdesc.numactivitymodifiers; j++)
                        {
                            mstudioactivitymodifier_t_v52 activitymodifier <bgcolor=0x119900, read=Str("%s : %i", ReadString(startof(this) + this.sznameindex), this.negate)>;
                            FSeek(startof(seqdesc) + seqdesc.activitymodifierindex + ((sizeof(activitymodifier.sznameindex) * 2) * (j + 1)));
                        }
                    }
                    else
                    {
                        mstudioactivitymodifier_t activitymodifier[seqdesc.numactivitymodifiers] <bgcolor=0x119900, read=ReadString(startof(this) + this.sznameindex)>;
                    }
                }

                if(hdr.version >= 52)
                    Assert(seqdesc.ikResetMask == 0 || seqdesc.ikResetMask == 3, "the funny");
            } seqdesc <read=ReadString(startof(seqdesc) + seqdesc.szlabelindex)>;
        }
    } seqdescs <read=Str("%i sequences", hdr.numlocalseq)>;
}